<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on Braybaut</title>
    <link>/tags/devops/</link>
    <description>Recent content in Devops on Braybaut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Jul 2019 16:58:24 -0500</lastBuildDate>
    
	<atom:link href="/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Continuous Integration for Golang Applications with Terraform, Codebuilds and ECR</title>
      <link>/posts/continuous-integration-for-golang-applications-with-terraform-codebuilds-and-ecr/</link>
      <pubDate>Fri, 26 Jul 2019 16:58:24 -0500</pubDate>
      
      <guid>/posts/continuous-integration-for-golang-applications-with-terraform-codebuilds-and-ecr/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;/images/Gopher-aws.png&#34; alt=&#34;Gopher&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I wrote this post for sharing, how we can do continuous integration for Golang APIs with some tools. In this post I&amp;rsquo;m going to use terraform for making a codebuild resource, Code build to build the Golang API and generate a docker image and  ECR for keeping the docker image.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Traefik: Load Balancer y Reverse Proxy para Docker</title>
      <link>/posts/traefik-load-balancer-y-reverse-proxy-para-docker/</link>
      <pubDate>Wed, 25 Oct 2017 22:25:26 +0000</pubDate>
      
      <guid>/posts/traefik-load-balancer-y-reverse-proxy-para-docker/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;/images/traefik.png&#34; alt=&#34;image1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Cuando trabajamos con docker en ambientes productivos, la mayoría de casos usamos tecnologías para orquestar y poder ofrecer alta disponibilidad sobre nuestros micro servicios, debido a esto, nosotros corremos multiples aplicaciones sobre un mismo host que haga parte de nuestro stack de orquestación. Para que estas aplicaciones puedan ser consumidas sin necesidad de exponer un puerto, necesitamos un reverse proxy para poder consumir estos servicios desde un único puerto.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Traefik &lt;/strong&gt;es un reverse proxy  y load balancer compatible con docker escrito en Go, creado especialmente para micro servicios, Traefik soporta diferentes Backends como: &lt;strong&gt;(Docker, docker Swarm, Kubernetes, Rancher, Amazon ECS y muchos mas )&lt;/strong&gt; su configuración es bastante sencilla y cuenta con un Dashboard donde podemos visualizar nuestros Micro servicios.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>