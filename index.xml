<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>https://braybaut.com/</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 10 Feb 2019 21:52:53 +0000</lastBuildDate>
    
	<atom:link href="https://braybaut.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Parseando JSON con Golang y las naves de spaceX</title>
      <link>https://braybaut.com/parseando-json-con-golang-y-las-naves-de-spacex/</link>
      <pubDate>Sun, 10 Feb 2019 21:52:53 +0000</pubDate>
      
      <guid>https://braybaut.com/parseando-json-con-golang-y-las-naves-de-spacex/</guid>
      <description>&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img src=&#34;https://i1.wp.com/braybaut.com/wp-content/uploads/2019/02/maxresdefault.jpg?resize=648%2C365&amp;#038;ssl=1&#34; alt=&#34;&#34; class=&#34;wp-image-974&#34; srcset=&#34;https://i1.wp.com/braybaut.com/wp-content/uploads/2019/02/maxresdefault.jpg?resize=1024%2C576&amp;ssl=1 1024w, https://i1.wp.com/braybaut.com/wp-content/uploads/2019/02/maxresdefault.jpg?resize=300%2C169&amp;ssl=1 300w, https://i1.wp.com/braybaut.com/wp-content/uploads/2019/02/maxresdefault.jpg?resize=768%2C432&amp;ssl=1 768w, https://i1.wp.com/braybaut.com/wp-content/uploads/2019/02/maxresdefault.jpg?w=1280&amp;ssl=1 1280w&#34; sizes=&#34;(max-width: 648px) 100vw, 648px&#34; data-recalc-dims=&#34;1&#34; /&gt;&lt;/figure&gt; 

&lt;p&gt;Golang se ha convertido en uno de mis lenguajes favoritos y hoy escribiré de como podemos usar go para poder consumir la API de spaceX y obtener información de las naves lanzadas al espacio&lt;/p&gt;

&lt;p&gt;Soy admirador total de &lt;a href=&#34;https://en.wikipedia.org/wiki/Elon_Musk&#34; target=&#34;_blank&#34;&gt;Elon musk&lt;/a&gt; y de todas sus compañías, una de ellas es &lt;a href=&#34;https://www.spacex.com/&#34; target=&#34;_blank&#34;&gt;spaceX&lt;/a&gt;, una compañía dedicada al transporte aeroespacial y hoy por medio de Golang vamos a obtener información de su ultima nave lanzada al espacio.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creando un cluster de kubernetes en GCP con terraform</title>
      <link>https://braybaut.com/creando-un-cluster-de-kubernetes-en-gcp-con-terraform/</link>
      <pubDate>Sun, 03 Feb 2019 21:44:10 +0000</pubDate>
      
      <guid>https://braybaut.com/creando-un-cluster-de-kubernetes-en-gcp-con-terraform/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://i0.wp.com/braybaut.com/wp-content/uploads/2018/03/terra-gcp-kubernetes2.png?ssl=1&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-924&#34; src=&#34;https://i0.wp.com/braybaut.com/wp-content/uploads/2018/03/terra-gcp-kubernetes2.png?resize=648%2C220&amp;#038;ssl=1&#34; alt=&#34;&#34; width=&#34;648&#34; height=&#34;220&#34; srcset=&#34;https://i0.wp.com/braybaut.com/wp-content/uploads/2018/03/terra-gcp-kubernetes2.png?w=750&amp;ssl=1 750w, https://i0.wp.com/braybaut.com/wp-content/uploads/2018/03/terra-gcp-kubernetes2.png?resize=300%2C102&amp;ssl=1 300w&#34; sizes=&#34;(max-width: 648px) 100vw, 648px&#34; data-recalc-dims=&#34;1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Terraform, es una de las herramientas mas potentes de hashicorp y hoy en día es usada por grandes compañías para mantener infraestructura en la nube.&lt;/p&gt;

&lt;p&gt;Terraform destaca porque podemos trabajar con múltiples providers al mismo tiempo, ¿ que quiere decir esto ? que le podemos decir a terraform que cuando se cree una nueva instancia en GCP al mismo tiempo  genere un registro DNS en route53 en AWS, esto de una manera muy sencilla.&lt;/p&gt;

&lt;p&gt;Pero hoy no vamos a hablar de AWS, hoy vamos a hablar de GCP, una nube muy poderosa que tiene características muy interesantes para tener en cuenta y en este caso, construiremos un cluster de Kubernetes en GCP usando terraform.&lt;/p&gt;

&lt;h3 id=&#34;conectandonos-a-google-cloud-platform&#34;&gt;Conectandonos a Google Cloud platform:&lt;/h3&gt;

&lt;p&gt;Para conectarnos a GCP solo necesitamos determinar:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Credentials&lt;/strong&gt; : En este caso tenemos que generar un account service y usar el archivo json que se genera con los permisos necesarios&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Project&lt;/strong&gt;  : Determinamos el proyecto en GCP en el cual vamos a trabajar&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;region&lt;/strong&gt; : Determinamos la región por el cual vamos a trabajar.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Despues de determinar los valores mencionados anteriormente, los seteamos en el siguiente archivo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Utilizando Traefik como Dynamic Reverse Proxy en Docker Swarm sobre  AWS</title>
      <link>https://braybaut.com/utilizando-traefik-como-dinamic-reverse-proxy-en-docker-swarm-sobre-aws/</link>
      <pubDate>Fri, 22 Dec 2017 01:20:18 +0000</pubDate>
      
      <guid>https://braybaut.com/utilizando-traefik-como-dinamic-reverse-proxy-en-docker-swarm-sobre-aws/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://i1.wp.com/braybaut.com/wp-content/uploads/2017/12/internal.png?ssl=1&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-890&#34; src=&#34;https://i1.wp.com/braybaut.com/wp-content/uploads/2017/12/internal.png?resize=648%2C354&amp;#038;ssl=1&#34; alt=&#34;&#34; width=&#34;648&#34; height=&#34;354&#34; srcset=&#34;https://i1.wp.com/braybaut.com/wp-content/uploads/2017/12/internal.png?w=1921&amp;ssl=1 1921w, https://i1.wp.com/braybaut.com/wp-content/uploads/2017/12/internal.png?resize=300%2C164&amp;ssl=1 300w, https://i1.wp.com/braybaut.com/wp-content/uploads/2017/12/internal.png?resize=768%2C420&amp;ssl=1 768w, https://i1.wp.com/braybaut.com/wp-content/uploads/2017/12/internal.png?resize=1024%2C560&amp;ssl=1 1024w, https://i1.wp.com/braybaut.com/wp-content/uploads/2017/12/internal.png?resize=750%2C410&amp;ssl=1 750w, https://i1.wp.com/braybaut.com/wp-content/uploads/2017/12/internal.png?resize=1140%2C624&amp;ssl=1 1140w, https://i1.wp.com/braybaut.com/wp-content/uploads/2017/12/internal.png?w=1296&amp;ssl=1 1296w&#34; sizes=&#34;(max-width: 648px) 100vw, 648px&#34; data-recalc-dims=&#34;1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Traefik es una herramienta muy potente gracias a que soporta varios providers como backend, en este caso usaremos traefik para que nos sirva como &lt;strong&gt;Dynamic Reverse Proxy&lt;/strong&gt; sobre un cluster de &lt;strong&gt;Docker Swarm&lt;/strong&gt; en &lt;strong&gt;Amazon Web Services&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;componentes&#34;&gt;Componentes:&lt;/h3&gt;

&lt;h4 id=&#34;3-instancias-1-manager-y-2-worker&#34;&gt;3 Instancias (1 Manager  y 2 worker):&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Manager: &lt;/strong&gt;Esta instancia sera la que controlara todo el cluster, en ella desplegaremos traefik y los servicios que no son worker, esta instancia estará sobre una subnet , la cual llamaremos &lt;strong&gt;&amp;#8220;subnet frontend&amp;#8221; &lt;/strong&gt;y tendrá su respectivo Secure Group&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Worker: &lt;/strong&gt;las instancias llamadas workers son dichas instancias donde correran nuestros servicios desplegados en AWS, sin tener en cuenta los servicios de &amp;#8220;management&amp;#8221; que podemos desplegar en la subnet de frontend, aquí desplegaremos los servicios que necesitemos como un web server, un micro servicio, etc, estas dos instancias estarán sobre otra subnet, la cual la llamaremos &lt;strong&gt;&amp;#8220;subnet backend&amp;#8221;&lt;/strong&gt; y tendrá su respectivo Secure Group&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Traefik: Load Balancer y Reverse Proxy para Docker</title>
      <link>https://braybaut.com/traefik-load-balancer-y-reverse-proxy-para-microservicios/</link>
      <pubDate>Wed, 25 Oct 2017 22:25:26 +0000</pubDate>
      
      <guid>https://braybaut.com/traefik-load-balancer-y-reverse-proxy-para-microservicios/</guid>
      <description>&lt;p&gt;[&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter size-full wp-image-868&#34; src=&#34;https://i1.wp.com/braybaut.com/wp-content/uploads/2017/10/architecture.png?resize=648%2C354&amp;#038;ssl=1&#34; alt=&#34;&#34; width=&#34;648&#34; height=&#34;354&#34; srcset=&#34;https://i1.wp.com/braybaut.com/wp-content/uploads/2017/10/architecture.png?w=1921&amp;ssl=1 1921w, https://i1.wp.com/braybaut.com/wp-content/uploads/2017/10/architecture.png?resize=300%2C164&amp;ssl=1 300w, https://i1.wp.com/braybaut.com/wp-content/uploads/2017/10/architecture.png?resize=768%2C420&amp;ssl=1 768w, https://i1.wp.com/braybaut.com/wp-content/uploads/2017/10/architecture.png?resize=1024%2C560&amp;ssl=1 1024w, https://i1.wp.com/braybaut.com/wp-content/uploads/2017/10/architecture.png?resize=750%2C410&amp;ssl=1 750w, https://i1.wp.com/braybaut.com/wp-content/uploads/2017/10/architecture.png?w=1296&amp;ssl=1 1296w&#34; sizes=&#34;(max-width: 648px) 100vw, 648px&#34; data-recalc-dims=&#34;1&#34; /&gt;]&lt;a href=&#34;https://braybaut.com/wp-content/uploads/2017/10/architecture.png&#34; target=&#34;_blank&#34;&gt;1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cuando trabajamos con docker en ambientes productivos, la mayoría de casos usamos tecnologías para orquestar y poder ofrecer alta disponibilidad sobre nuestros micro servicios, debido a esto, nosotros corremos multiples aplicaciones sobre un mismo host que haga parte de nuestro stack de orquestación. Para que estas aplicaciones puedan ser consumidas sin necesidad de exponer un puerto, necesitamos un reverse proxy para poder consumir estos servicios desde un único puerto.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Traefik &lt;/strong&gt;es un reverse proxy  y load balancer compatible con docker escrito en Go, creado especialmente para micro servicios, Traefik soporta diferentes Backends como: &lt;strong&gt;(Docker, docker Swarm, Kubernetes, Rancher, Amazon ECS y muchos mas )&lt;/strong&gt; su configuración es bastante sencilla y cuenta con un Dashboard donde podemos visualizar nuestros Micro servicios.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Howto: Instalando Rocket.Chat en Docker</title>
      <link>https://braybaut.com/howto-instalando-rocket-chat-en-docker/</link>
      <pubDate>Tue, 07 Mar 2017 06:54:30 +0000</pubDate>
      
      <guid>https://braybaut.com/howto-instalando-rocket-chat-en-docker/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://i0.wp.com/braybaut.com/wp-content/uploads/2017/03/rocket-chat.png?ssl=1&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-824&#34; src=&#34;https://i0.wp.com/braybaut.com/wp-content/uploads/2017/03/rocket-chat.png?resize=546%2C126&amp;#038;ssl=1&#34; alt=&#34;&#34; width=&#34;546&#34; height=&#34;126&#34; srcset=&#34;https://i0.wp.com/braybaut.com/wp-content/uploads/2017/03/rocket-chat.png?w=546&amp;ssl=1 546w, https://i0.wp.com/braybaut.com/wp-content/uploads/2017/03/rocket-chat.png?resize=300%2C69&amp;ssl=1 300w&#34; sizes=&#34;(max-width: 546px) 100vw, 546px&#34; data-recalc-dims=&#34;1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Rocket.chat para mi es una de las mejores plataformas de chat &lt;strong&gt;OpenSource&lt;/strong&gt; que existen, es muy flexible a la hora de adaptarlo y lo mejor, tiene cliente para toda las plataformas.&lt;/p&gt;

&lt;p&gt;En este caso, realizaremos la instalación de Rocket.chat en &lt;strong&gt;docker&lt;/strong&gt;, por el cual no importara la distribución linux que utilicemos, pero en este caso utilizare Centos 7 como host de mis contenedores para hacer el despliegue.&lt;/p&gt;

&lt;h2 id=&#34;instalación&#34;&gt;Instalación:&lt;/h2&gt;

&lt;p&gt;Vamos a usar varios contenedores y para lograr la comunicación entre ellos, se usara &lt;strong&gt;Docker Compose&lt;/strong&gt;, el cual nos permite hacer despliegues de servicios el cual involucra varios contenedores.&lt;/p&gt;

&lt;h3 id=&#34;docker&#34;&gt;Docker:&lt;/h3&gt;

&lt;p&gt;Instalamos docker usando el script que se encuentra en su pagina oficial.&lt;/p&gt;

&lt;pre class=&#34;lang:default decode:true&#34;&gt;wget -qO- https://get.docker.com/ | sh&lt;/pre&gt;

&lt;p&gt;Al finalizar el proceso usamos systemctl para subir el servicio y dejarlo habilitado para que inicie cuando se inicie el servidor.&lt;/p&gt;

&lt;pre class=&#34;lang:default decode:true&#34;&gt;systemctl start enable&lt;/pre&gt;

&lt;pre class=&#34;lang:default decode:true &#34;&gt;systemcl enable docker&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Autentificación LDAP Vtiger CRM 6</title>
      <link>https://braybaut.com/autentificacion-ldap-vtiger-crm-6-4/</link>
      <pubDate>Tue, 19 Jan 2016 01:43:11 +0000</pubDate>
      
      <guid>https://braybaut.com/autentificacion-ldap-vtiger-crm-6-4/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/Vtiger-Logo-1.jpg?ssl=1&#34; rel=&#34;attachment wp-att-641&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-641&#34; src=&#34;https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/Vtiger-Logo-1.jpg?resize=648%2C195&amp;#038;ssl=1&#34; alt=&#34;Vtiger-Logo-1&#34; width=&#34;648&#34; height=&#34;195&#34; srcset=&#34;https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/Vtiger-Logo-1.jpg?w=3546&amp;ssl=1 3546w, https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/Vtiger-Logo-1.jpg?resize=300%2C90&amp;ssl=1 300w, https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/Vtiger-Logo-1.jpg?resize=768%2C231&amp;ssl=1 768w, https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/Vtiger-Logo-1.jpg?resize=1024%2C308&amp;ssl=1 1024w, https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/Vtiger-Logo-1.jpg?resize=750%2C226&amp;ssl=1 750w, https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/Vtiger-Logo-1.jpg?w=1296&amp;ssl=1 1296w, https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/Vtiger-Logo-1.jpg?w=1944&amp;ssl=1 1944w&#34; sizes=&#34;(max-width: 648px) 100vw, 648px&#34; data-recalc-dims=&#34;1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vtiger es un CRM de código abierto muy potente que trata de acercarse  a grandes crms como salesforce y SugarCRM, pero en esta ocasión veremos como autentificarlo hacia LDAP.&lt;/p&gt;

&lt;p&gt;Con un gran compañero de la compañía &lt;a href=&#34;https://twitter.com/Gabo_fdc?s=09&#34; target=&#34;_blank&#34;&gt;Gabo&lt;/a&gt;, logramos hacer la autentificación continuación describo los pasos para lograrla.&lt;/p&gt;

&lt;p&gt;Para lograr la autentificación debemos usar los archivos de autentificación de Vtiger de 5.x,  estos archivos los encuentran en github.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/braybaut/ldap-vtiger&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://github.com/braybaut/ldap-vtiger&#34; target=&#34;_blank&#34;&gt;https://github.com/braybaut/ldap-vtiger&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Howto: como crear un contenedor de datos en docker</title>
      <link>https://braybaut.com/howto-como-crear-un-contenedor-de-datos-en-docker/</link>
      <pubDate>Wed, 13 Jan 2016 17:40:11 +0000</pubDate>
      
      <guid>https://braybaut.com/howto-como-crear-un-contenedor-de-datos-en-docker/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/docker.png?ssl=1&#34; rel=&#34;attachment wp-att-611&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-611&#34; src=&#34;https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/docker.png?resize=648%2C220&amp;#038;ssl=1&#34; alt=&#34;docker&#34; width=&#34;648&#34; height=&#34;220&#34; srcset=&#34;https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/docker.png?w=792&amp;ssl=1 792w, https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/docker.png?resize=300%2C102&amp;ssl=1 300w, https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/docker.png?resize=768%2C261&amp;ssl=1 768w, https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/docker.png?resize=750%2C255&amp;ssl=1 750w&#34; sizes=&#34;(max-width: 648px) 100vw, 648px&#34; data-recalc-dims=&#34;1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;los contenedores no son persistentes en sus datos al ser ejecutados, esto quiere decir que al terminar una ejecución de un contenedor este pierde sus datos.&lt;/p&gt;

&lt;p&gt;Existen varias practicas para realizar la persistencia de los datos, en esta ocasión usaremos un contenedor de datos ( data container) para hacer la persistencia.&lt;/p&gt;

&lt;p&gt;Este contenedor solo guardara la información que se requiere sea persistente, no es necesario que este iniciado ya que  lo podemos compartir sin necesidad  de que este ejecutado.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>https://braybaut.com/sobre-mi/</link>
      <pubDate>Wed, 13 Jan 2016 16:07:49 +0000</pubDate>
      
      <guid>https://braybaut.com/sobre-mi/</guid>
      <description>Mi nombre es Brayan y soy Cloud &amp;amp; DevOps engineer en Globant, una fabrica de software que tiene oficinas en varios sitios del mundo.
Tengo este blog personal para escribir algunos Tips tecnológicos que pueden ser de interés,
Twitter
Github
Google+
Linkedin</description>
    </item>
    
    <item>
      <title>Docker: Ingresar al bash de un contenedor iniciado | Script</title>
      <link>https://braybaut.com/docker-ingresar-al-bash-de-un-contenedor-iniciado-script/</link>
      <pubDate>Tue, 12 Jan 2016 04:40:50 +0000</pubDate>
      
      <guid>https://braybaut.com/docker-ingresar-al-bash-de-un-contenedor-iniciado-script/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/docker.png?ssl=1&#34; rel=&#34;attachment wp-att-611&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-611&#34; src=&#34;https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/docker.png?resize=648%2C220&amp;#038;ssl=1&#34; alt=&#34;docker&#34; width=&#34;648&#34; height=&#34;220&#34; srcset=&#34;https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/docker.png?w=792&amp;ssl=1 792w, https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/docker.png?resize=300%2C102&amp;ssl=1 300w, https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/docker.png?resize=768%2C261&amp;ssl=1 768w, https://i1.wp.com/braybaut.com/wp-content/uploads/2016/01/docker.png?resize=750%2C255&amp;ssl=1 750w&#34; sizes=&#34;(max-width: 648px) 100vw, 648px&#34; data-recalc-dims=&#34;1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ultimamente he trabajado mucho con docker y en el maravilloso recorrido que he tenido con docker se me presento un problema gigante,  inicio el contenedor con su servicio pero por X o Y motivo quiero ingresar al bash y el &amp;#8220;docker attach&amp;#8221; no funciona porque el docker no lo inicie con /bin/bash&lt;/p&gt;

&lt;p&gt;Una solución es abrir el puerto 22 e ingresar por ssh, pero no es la gracia trabajar de esta manera ya que estamos con container. Navegando por la red encontré un comando un poco largo para poder ingresar al bash del container y un compañero de la compañía donde trabajo también me paso uno parecido, pero me pareció algo fastidioso usar un comando largo para ingresar al bash entonces me tome la tarea de crear un script para que me facilite esta tarea, se los mostrare:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Howto: Actualizando Fedora 22 a Fedora 23</title>
      <link>https://braybaut.com/howto-actualizando-fedora-22-a-fedora-23/</link>
      <pubDate>Wed, 04 Nov 2015 16:45:00 +0000</pubDate>
      
      <guid>https://braybaut.com/howto-actualizando-fedora-22-a-fedora-23/</guid>
      <description>&lt;div dir=&#34;ltr&#34; style=&#34;text-align: left;&#34;&gt;
  &lt;a class=&#34;twitter-share-button&#34; href=&#34;http://twitter.com/share&#34;&gt;Tweet&lt;/a&gt; &lt;span class=&#34;fullpost&#34;&gt;&lt;!-- AddThis Button BEGIN --&gt;&lt;/span&gt;&lt;/p&gt; 
  
  &lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: justify;&#34;&gt;
    &lt;a style=&#34;margin-left: 1em; margin-right: 1em;&#34; href=&#34;https://braybaut.files.wordpress.com/2015/11/5d575-fedora2b23.jpg&#34;&gt;&lt;img src=&#34;https://braybaut.files.wordpress.com/2015/11/9806e-fedora2b23.jpg?resize=640%2C270&#34; alt=&#34;&#34; width=&#34;640&#34; height=&#34;270&#34; border=&#34;0&#34; data-recalc-dims=&#34;1&#34; /&gt; &lt;/a&gt;
  &lt;/div&gt;
  

&lt;p&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: justify;&#34;&gt;
    Aunque se presento una semana de retraso en el lanzamiento oficial de Fedora 23  &lt;span style=&#34;text-decoration: line-through;&#34;&gt;(27-10-2015)&lt;/span&gt; Ya no tenemos que esperar mas, porque Fedora23 ya esta con nosotros.
  &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: justify;&#34;&gt;
  &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: justify;&#34;&gt;
    dnf nos hace el trabajo &amp;#8220;Sucio&amp;#8221; entonces empecemos:
  &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: justify;&#34;&gt;
  &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    &lt;a name=&#34;more&#34;&gt;&lt;/a&gt;
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;h4 class=&#34;separator&#34; style=&#34;clear: both; text-align: justify;&#34;&gt;
    &lt;b&gt;1) Actualicemos el sistema &lt;/b&gt;
  &lt;/h4&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: justify;&#34;&gt;
    &lt;b&gt; &lt;/b&gt;
  &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: justify;&#34;&gt;
    Es necesario tener los últimos paquetes de Fedora 22 para realizar la actualización a fedora 23
  &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div style=&#34;text-align: justify;&#34;&gt;
    &lt;blockquote class=&#34;tr_bq&#34;&gt;
      &lt;div class=&#34;separator&#34; style=&#34;clear: both;&#34;&gt;
        sudo dnf update -y
      &lt;/div&gt;
    &lt;/blockquote&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;h4&amp;gt;
  &amp;lt;b&amp;gt;2) Instalación del plugin de DNF&amp;lt;/b&amp;gt;
&amp;lt;/h4&amp;gt;

&amp;lt;p&amp;gt;
  &amp;lt;b&amp;gt;&amp;lt;br /&amp;gt; &amp;lt;/b&amp;gt;Este plugin es necesario para hacer la actualización a fedora 23
&amp;lt;/p&amp;gt;

&amp;lt;blockquote class=&amp;quot;tr_bq&amp;quot;&amp;gt;
  &amp;lt;p&amp;gt;
    sudo dnf install dnf-plugin-system-upgrade
  &amp;lt;/p&amp;gt;
&amp;lt;/blockquote&amp;gt;

&amp;lt;h4&amp;gt;
  &amp;lt;b&amp;gt;3)Iniciando Actualización &amp;lt;/b&amp;gt;
&amp;lt;/h4&amp;gt;

&amp;lt;p&amp;gt;
  Como ya tenemos nuestro fedora 22 con los ultimos paquetes y el plugin de dnf instalado podemos iniciar la actualización.
&amp;lt;/p&amp;gt;

&amp;lt;blockquote class=&amp;quot;tr_bq&amp;quot;&amp;gt;
  &amp;lt;p&amp;gt;
    sudo dnf system-upgrade download &amp;amp;#8211;releasever=23 &amp;amp;#8211;best
  &amp;lt;/p&amp;gt;
&amp;lt;/blockquote&amp;gt;

&amp;lt;p&amp;gt;
  Con este comando dnf bajara todas las actualizaciones en el equipo local para después instalarlas. Con &amp;amp;#8211;best nos aseguramos que no nos cancele la actualización si un paquete no puede ser actualizado &amp;lt;i&amp;gt;&amp;lt;span style=&amp;quot;text-decoration: line-through;&amp;quot;&amp;gt;(como pasa con una dependencia de mysql workbench)&amp;lt;/span&amp;gt;&amp;lt;/i&amp;gt;
&amp;lt;/p&amp;gt;

&amp;lt;h4&amp;gt;
  &amp;lt;b&amp;gt;4) Reiniciando y actualizando&amp;lt;/b&amp;gt;
&amp;lt;/h4&amp;gt;

&amp;lt;h4&amp;gt;
&amp;lt;/h4&amp;gt;

&amp;lt;p&amp;gt;
  Cuando el proceso anterior finalice, procedemos a reiniciar con dnf para que nuestra maquina instale las actualizaciones, tomara un poco de tiempo, pueden ir tomando un cafe mientras finaliza.
&amp;lt;/p&amp;gt;

&amp;lt;blockquote class=&amp;quot;tr_bq&amp;quot;&amp;gt;
  &amp;lt;p&amp;gt;
    sudo dnf system-upgrade reboot
  &amp;lt;/p&amp;gt;
&amp;lt;/blockquote&amp;gt;

&amp;lt;p&amp;gt;
  Cuando este proceso finalice ya podemos iniciar con Fedora 23 y disfrutar de varios cambios como Gnome 3.18
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    &lt;a href=&#34;http://platform.twitter.com/widgets.js&#34;&gt;http://platform.twitter.com/widgets.js&lt;/a&gt;
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;addthis_toolbox addthis_default_style &#34;&gt;
  &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    &lt;span class=&#34;fullpost&#34;&gt;&lt;a href=&#34;http://s7.addthis.com/js/250/addthis_widget.js#pubid=xa-4dcde18b394a19ad&#34;&gt;http://s7.addthis.com/js/250/addthis_widget.js#pubid=xa-4dcde18b394a19ad&lt;/a&gt;&lt;!-- AddThis Button END --&gt;&lt;/span&gt;&lt;/div&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>